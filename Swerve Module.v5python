{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ntop_motor = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)\nbottom_motor = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\nir_1 = Distance(Ports.PORT19)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Define swerve class\nclass SwerveModule:\n    target_ang = 90;\n    motor_split = [0.75, 0.25]\n\n    def __init__(self, t_motor, b_motor, ir, module_pos):\n        self.t_motor = t_motor\n        self.b_motor = b_motor\n        self.ir = ir\n        self.pos = module_pos\n\n        self.t_motor.spin(FORWARD)\n        self.b_motor.spin(FORWARD)\n        \n        self.t_motor.set_velocity(0)\n        self.b_motor.set_velocity(0)\n\n    def home(self):\n        thresh = 30\n        p1, p2 = [0,0], [0,0]\n        correction = 27 #IR seems to be slightly offset causing an off center home\n        \n        #So the wheel doesn't start triggered\n        if self.ir.object_distance(MM) < thresh:\n            TurnMotor(0, 1)\n            while self.ir.object_distance(MM) < thresh:\n                wait(0.05, SECONDS)\n            wait(0.5, SECONDS)\n\n        #Get First pos\n        TurnMotor(0, -100)\n\n        while self.ir.object_distance(MM) >= (thresh-2):\n            wait(0.05, SECONDS)\n        p1 = [self.t_motor.position(DEGREES), self.b_motor.position(DEGREES)]\n\n        #Get Second Pos\n        while self.ir.object_distance(MM) < thresh:\n            wait(0.05, SECONDS)\n        p2 = [self.t_motor.position(DEGREES), self.b_motor.position(DEGREES)]\n\n        #Move to midpoint\n        TurnMotor(0, 1)\n        self.t_motor.spin_to_position((p1[0]+p2[0])/2 + correction, DEGREES)\n        self.b_motor.spin_to_position((p1[1]+p2[1])/2 + correction, DEGREES)\n\n        #stop and zero\n        self.t_motor.set_velocity(0)\n        self.b_motor.set_velocity(0)\n        wait(0.1, SECONDS)\n        self.t_motor.set_position(0, DEGREES)\n        self.t_motor.set_position(0, DEGREES)\n\n        brain.screen.print(\"Done Homing\")\n\n    def TurnMotor(moveSpeed, turnSpeed):\n        tSpeed = -self.motor_split[0]*moveSpeed + self.motor_split[1]*turnSpeed\n        bSpeed = self.motor_split[0]*moveSpeed + self.motor_split[1]*turnSpeed\n\n        self.t_motor.set_velocity(tSpeed)\n        self.b_motor.set_velocity(bSpeed)\n        \nmodule = SwerveModule(top_motor, bottom_motor, ir_1, [1,1])\nmodule.home()","textLanguage":"python","robotConfig":[{"port":[10],"name":"top_motor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[20],"name":"bottom_motor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[19],"name":"ir_1","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{}}],"slot":3,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}